@startuml

interface Observador {
    + actualizar(mensaje: string)
}

class Cliente implements Observador {
    - id: int
    - nombre: string
    - correo: string
    - telefono: string
    --
    + actualizar(mensaje: string)
    + reservarCita()
    + cancelarCita()
}

class Administrador implements Observador {
    - id: int
    - nombre: string
    - correo: string
    --
    + gestionarServicios()
    + gestionarUsuarios()
    + generarReportes()
    + actualizar(mensaje: string)
    --
    ' Singleton
    - static _instancia: Administrador
    + static getInstance(): Administrador
}

class Cita {
    - id: int
    - fecha: string
    - hora: string
    - estado: string
    - observadores: List<Observador>
    --
    + agregarObservador(obs: Observador)
    + eliminarObservador(obs: Observador)
    + notificarObservadores()
    + confirmarCita()
    + cancelarCita()
}

' Relaciones
Observador <|.. Cliente
Observador <|.. Administrador
Cita o-- Observador : "notifica >"

@enduml
